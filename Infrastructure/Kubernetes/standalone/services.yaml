apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: expensetracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "80"
    spec:
      containers:
        - name: auth-service
          image: auth-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ConnectionStrings__AuthDb
              value: "Host=$(DB_SERVER);Port=$(DB_PORT);Database=$(AUTH_DB_NAME);Username=$(DB_USER);Password=$(DB_PASSWORD)"
            - name: Jwt__Secret
              valueFrom:
                secretKeyRef:
                  name: expensetracker-secrets
                  key: JWT_SECRET
            - name: Jwt__Issuer
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_ISSUER
            - name: Jwt__Audience
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_AUDIENCE
          envFrom:
            - configMapRef:
                name: expensetracker-config
            - secretRef:
                name: expensetracker-secrets
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: expensetracker
spec:
  selector:
    app: auth-service
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expense-service
  namespace: expensetracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expense-service
  template:
    metadata:
      labels:
        app: expense-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "80"
    spec:
      containers:
        - name: expense-service
          image: expense-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ConnectionStrings__ExpenseDb
              value: "Host=$(DB_SERVER);Port=$(DB_PORT);Database=$(EXPENSE_DB_NAME);Username=$(DB_USER);Password=$(DB_PASSWORD)"
            - name: Jwt__Secret
              valueFrom:
                secretKeyRef:
                  name: expensetracker-secrets
                  key: JWT_SECRET
            - name: Jwt__Issuer
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_ISSUER
            - name: Jwt__Audience
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_AUDIENCE
            - name: AuthService__BaseUrl
              value: http://auth-service
          envFrom:
            - configMapRef:
                name: expensetracker-config
            - secretRef:
                name: expensetracker-secrets
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: expense-service
  namespace: expensetracker
spec:
  selector:
    app: expense-service
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: category-service
  namespace: expensetracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: category-service
  template:
    metadata:
      labels:
        app: category-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "80"
    spec:
      containers:
        - name: category-service
          image: category-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ConnectionStrings__CategoryDb
              value: "Host=$(DB_SERVER);Port=$(DB_PORT);Database=$(CATEGORY_DB_NAME);Username=$(DB_USER);Password=$(DB_PASSWORD)"
            - name: Jwt__Secret
              valueFrom:
                secretKeyRef:
                  name: expensetracker-secrets
                  key: JWT_SECRET
            - name: Jwt__Issuer
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_ISSUER
            - name: Jwt__Audience
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_AUDIENCE
            - name: AuthService__BaseUrl
              value: http://auth-service
          envFrom:
            - configMapRef:
                name: expensetracker-config
            - secretRef:
                name: expensetracker-secrets
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: category-service
  namespace: expensetracker
spec:
  selector:
    app: category-service
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: budget-service
  namespace: expensetracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: budget-service
  template:
    metadata:
      labels:
        app: budget-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "80"
    spec:
      containers:
        - name: budget-service
          image: budget-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ConnectionStrings__BudgetDb
              value: "Host=$(DB_SERVER);Port=$(DB_PORT);Database=$(BUDGET_DB_NAME);Username=$(DB_USER);Password=$(DB_PASSWORD)"
            - name: Jwt__Secret
              valueFrom:
                secretKeyRef:
                  name: expensetracker-secrets
                  key: JWT_SECRET
            - name: Jwt__Issuer
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_ISSUER
            - name: Jwt__Audience
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_AUDIENCE
            - name: AuthService__BaseUrl
              value: http://auth-service
          envFrom:
            - configMapRef:
                name: expensetracker-config
            - secretRef:
                name: expensetracker-secrets
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: budget-service
  namespace: expensetracker
spec:
  selector:
    app: budget-service
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: savings-goal-service
  namespace: expensetracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: savings-goal-service
  template:
    metadata:
      labels:
        app: savings-goal-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "80"
    spec:
      containers:
        - name: savings-goal-service
          image: savings-goal-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ConnectionStrings__SavingsGoalDb
              value: "Host=$(DB_SERVER);Port=$(DB_PORT);Database=$(SAVINGS_DB_NAME);Username=$(DB_USER);Password=$(DB_PASSWORD)"
            - name: Jwt__Secret
              valueFrom:
                secretKeyRef:
                  name: expensetracker-secrets
                  key: JWT_SECRET
            - name: Jwt__Issuer
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_ISSUER
            - name: Jwt__Audience
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_AUDIENCE
            - name: AuthService__BaseUrl
              value: http://auth-service
          envFrom:
            - configMapRef:
                name: expensetracker-config
            - secretRef:
                name: expensetracker-secrets
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: savings-goal-service
  namespace: expensetracker
spec:
  selector:
    app: savings-goal-service
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-service
  namespace: expensetracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics-service
  template:
    metadata:
      labels:
        app: analytics-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "80"
    spec:
      containers:
        - name: analytics-service
          image: analytics-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ConnectionStrings__AnalyticsDb
              value: "Host=$(DB_SERVER);Port=$(DB_PORT);Database=$(ANALYTICS_DB_NAME);Username=$(DB_USER);Password=$(DB_PASSWORD)"
            - name: Jwt__Secret
              valueFrom:
                secretKeyRef:
                  name: expensetracker-secrets
                  key: JWT_SECRET
            - name: Jwt__Issuer
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_ISSUER
            - name: Jwt__Audience
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_AUDIENCE
            - name: ExpenseService__BaseUrl
              value: http://expense-service
            - name: BudgetService__BaseUrl
              value: http://budget-service
          envFrom:
            - configMapRef:
                name: expensetracker-config
            - secretRef:
                name: expensetracker-secrets
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: analytics-service
  namespace: expensetracker
spec:
  selector:
    app: analytics-service
  ports:
    - port: 80
      targetPort: 80