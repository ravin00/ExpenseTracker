---
# Ingress with TLS for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: expensetracker-ingress
  namespace: expensetracker
  labels:
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: ingress
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: argocd
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://expensetracker.yourdomain.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options DENY;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.expensetracker.yourdomain.com
    secretName: expensetracker-tls
  rules:
  - host: api.expensetracker.yourdomain.com
    http:
      paths:
      - path: /auth(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 80
      - path: /expenses(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: expense-service
            port:
              number: 80
      - path: /categories(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: category-service
            port:
              number: 80
      - path: /budgets(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: budget-service
            port:
              number: 80
      - path: /savings(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: savings-goal-service
            port:
              number: 80
      - path: /analytics(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: analytics-service
            port:
              number: 80
      - path: /health(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: auth-service  # Health check can go to any service
            port:
              number: 80
---
# TLS Certificate (you would typically use cert-manager for this)
apiVersion: v1
kind: Secret
metadata:
  name: expensetracker-tls
  namespace: expensetracker
  labels:
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: tls
    app.kubernetes.io/managed-by: argocd
type: kubernetes.io/tls
data:
  # Self-signed certificate for testing - replace with real certificates in production
  # Or use cert-manager to automatically generate certificates
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lVQTR4WmEvQmNxTWJzbnlXemJjcGh0aG9kTGlvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1F6RW9NQ1lHQTFVRUF3d2ZLaTVsZUhCbGJuTmxkSEpoWTJ0bGNpNTViM1Z5Wkc5dFlXbHVMbU52YlRFWApNQlVHQTFVRUNnd09aWGh3Wlc1elpYUnlZV05yWlhJd0hoY05NalV4TURFd01qQTFNelU1V2hjTk1qWXhNREV3Ck1qQTFNelU1V2pCRE1TZ3dKZ1lEVlFRRERCOHFMbVY0Y0dWdWMyVjBjbUZqYTJWeUxubHZkWEprYjIxaGFXNHUKWTI5dE1SY3dGUVlEVlFRS0RBNWxlSEJsYm5ObGRISmhZMnRsY2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRApnZ0VQQURDQ0FRb0NnZ0VCQUs0NHVvR3ZlN295K1JFQVJ1MzZZMXBpblZVRXEyNFRhZ29pSmIwcnRzUnM3emMrCmVWcjVkREp5NFlFT2tyVWZxa3FrajlyMk91eUdZdE93Y2h2UW44V3piOFR1bk5OZVh0WEoxZ1l2MXJ2clBaMTMKUG9EQURPRHh2UzRjTTZyMlNTNFRMTkQ4azBZcXJSVm1QRFFxUHFKcjAzSldhK0F4M1BLMGFGZWZwa3lyUWNkOQpnalRqWVd4SmljWlRVVXBrNUlKNGJKWmpzaEhjVFlLSkZuZzl3ZVY1Z0UxNmQweThWalJzSkQ1cm1LdGtYWmkxCnRDMDM4b0hnMWEzbzE5aTl0eWdXRTV5cHFTQ3R5eHBneEhyYk9uWGJCVVVuQ3lOWlNyV3Y5ZHNkZ2dpQkhZUmIKYTQ0ZDJxTUs3OHBJRDkvZlI5YmJEVFlNalRmNDFndUdlaXVLaUpVQ0F3RUFBYU5UTUZFd0hRWURWUjBPQkJZRQpGS3o4bHdwYXFsTWlYQWMyM0VRTWFMQ2Z5VzRFTUI4R0ExVWRJd1FZTUJhQUZLejhsd3BhcWxNaVhBYzIzRVFNCmFMQ2Z5VzRFTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUtmdXN4aEgKUDJiWVRtKzVuOExETS9WclVNRWdRd3NqaUJJL0ViRzZPQWlWZ2w2Sm05TzFFMXBsT0g2K0pSZTJIaUdmNHhXTAoySy9nUEc1WlNBZlNZU3VwTmVvMjYycGlXQnQ5UnhFMTJzL2VYNVlHNm9UTXFEY2FnRjJ4aFFNc3BpQkVETklCCmMwbS9OU2haMjYvZG8xQXpLY0loLzhOS2U5azRTS3RQM1dYQkNHdUZ1TndFZ2JiajVVUlUycERiQ2FyVTAwY0sKTHcreGxSWHpVWE9MZGtiN05nVCt1WHREWTNHZ05uamh5QkdleEUwWVZxUytJeExiWm4wUnljVEY0azFvWEtmWAplVGJmZURaWVB2UTY1ai9PTUpBTXJuQys1eURhbVRFWFFIelJhRnV4eG9abDJ2WHBCVi9LdWZFSEtYaTMzS09nClR0aUYwekpjdDh5T0Y1TT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ3VPTHFCcjN1Nk12a1IKQUVidCttTmFZcDFWQkt0dUUyb0tJaVc5SzdiRWJPODNQbmxhK1hReWN1R0JEcEsxSDZwS3BJL2E5anJzaG1MVApzSEliMEovRnMyL0U3cHpUWGw3VnlkWUdMOWE3NnoyZGR6NkF3QXpnOGIwdUhET3E5a2t1RXl6US9KTkdLcTBWClpqdzBLajZpYTlOeVZtdmdNZHp5dEdoWG42Wk1xMEhIZllJMDQyRnNTWW5HVTFGS1pPU0NlR3lXWTdJUjNFMkMKaVJaNFBjSGxlWUJOZW5kTXZGWTBiQ1ErYTVpclpGMll0YlF0Ti9LQjROV3Q2TmZZdmJjb0ZoT2NxYWtncmNzYQpZTVI2MnpwMTJ3VkZKd3NqV1VxMXIvWGJIWUlJZ1IyRVcydU9IZHFqQ3UvS1NBL2YzMGZXMncwMkRJMDMrTllMCmhub3Jpb2lWQWdNQkFBRUNnZ0VBQWdOSXhhMGhMbEVKY2ZTc0I4Z3FuckExKzNYNWhHVGlzWlJIRmF6c0hjL1oKREZmWW1oV2pZelBTNlhxaGRQTS8zMENRZUQ5UkJmWTFnbXhFUitXblVEeEJwZEpRbGR2b3dqL2tqUFMvaVRORQp1ODJBRE4wVjA2d25VSXc3TXBYMEx0S1hqc3M1azdMSmhpT2FFc3VNSnJTU2l2eDI5RU9rakZuMlBLWkNZRzlkCjA1RzJ1UWVLMzk1NzU3K0hKcWZMVkRkN2NQekNaZHdOYU0rR29HY1VWa2k0YzQrcTlqZEt4KzAyTmN5SWNFN0kKUHFxMVBoYmNPTWx6OWkxeC9VWk5PR1J0bWZrMFFweS9FNnNaRzJweFpyNlQ4Y05HWVFWZ3dZaGNVTW1vNHg5ZQpPQmJzOWFHdXdiZXBKY0pIeHRsNThoVGdZTlpLWFQ2OVQzRkRDaUI2a1FLQmdRRHpTYlJBZXgyeDFqM1c3TFlKClZEQ0hVTDJTZkJCMHRhRE5BcmtUWUFpZ05hOXR1bWt3TGhjM0hKb1VSc1diNFVvNWFnTHdhU0lPeThvejQreTAKNzljL2FzQ005aXZ6Q2ZzS3lnWVdOc0Y3cnRrZkNlc3J0YTlTUGljaVlYMndaYVJxbi9EdzYwdzdxam1xTDRUdwpzajdTZ0l2M25YcitzQ0hZNi85c01RRHczUUtCZ1FDM1V5dnd1V2FaVFI2bS9vdm5KV05zQXIyNmpwQ0lDbTJzCjh5Q2RTeUtSVG9KUXNLcmhuWkt5Sm1yemdiekpEcW1KRVNGYTJvamFGUHJTMDN1MnN1NU5XdGIzQzkvMnVuTkwKQldmR0NvekREWkN2RDlPRkt1b2R6UmRqT3pKRlYwUW54d0lvWnNIdjNseFZoY1NUS081a2lncmJpZ2VLOS9FcwpTSWE0KzhWZkdRS0JnUURBeTFTamtLMGNnOW5ubXhnNjFsUEt0OG95N2t3Z0lOcjMrOE5zdmpxM3N6TjlNaTh2CmRpY0JqcEh2cFpIdGtLQkFWV2xVMlF1YlRCWEYvMFpTc0lvVUFHWHNqeHlPOGdiV0t2aWQyL0NDTWpKdmJXM0cKNnFpdjlQOFFPTS9nM1B0cFg2d1JUM1hQQm52Q0NQeEJ2ZzhZdzdPbm0wMmZ6VFpWYjlldkJqcG5wUUtCZ0dXZgorNW5FalRXcVpMV2FJaUFPditDZVhHTFFxUnBnL1krRWI2NENlclVtV21NMHJHWEpuZ3FYOVczcm02V3hOUlpBCm9zYmtvanlTcU1DNmI3aEYxSWlaTk5WYWhkc1dYTmRYdGNFNUUvTUUwQkhicWh3R1FDWXBEUy83SHRFRm9VaVQKcjRTS0FqUmdoYnI3SG8rZGZaT0cycUg5RUZWZlFSaVZVK216MkNQeEFvR0JBSXZtK3NyRGNhdEhoNzlHc3pFYQpLV29DNmZBTUIrei9ORCtlNzUvMmlzOXYxTXMyVnpJMFFrdjlWSTE3NzZlSWllcmlJRDB2ZU81RDVQUmRtR2VwCnhnbzB4SktYVGhTYnR5Qk43N1lNVkwyTW44NFkyMG4rN2FsS1hrT2lhNmVoSG0wcmNXdTF4Y2JLdFhWVFZSTzIKK1F0dHhBMDFOYXh6ZUUvLzAyZ3JDWnJHCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
# Monitoring Ingress for Grafana and Prometheus
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: expensetracker-monitoring-ingress
  namespace: expensetracker
  labels:
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: argocd
  annotations:
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: "Monitoring Access Required"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - monitoring.expensetracker.yourdomain.com
    secretName: expensetracker-tls
  rules:
  - host: monitoring.expensetracker.yourdomain.com
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090
---
# Basic auth secret for monitoring access
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-auth
  namespace: expensetracker
  labels:
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/managed-by: argocd
type: Opaque
data:
  # admin:$2y$10$... (generate with htpasswd)
  # htpasswd -nb admin yourpassword | base64
  auth: YWRtaW46JDJ5JDEwJEsxVE9xdTF6ZS4yVXhaTm1WeUwyZy5iTndsZE1UZDFpQlVjWm5VNEI3dndxbGVoN3lwQy4K