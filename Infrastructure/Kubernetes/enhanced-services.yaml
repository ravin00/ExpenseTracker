# Enhanced service template with security and best practices
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: expensetracker
  labels:
    app: auth-service
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: auth
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: argocd
    tier: backend
spec:
  replicas: 2  # Increased for HA
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  selector:
    matchLabels:
      app: auth-service
      app.kubernetes.io/name: expensetracker
      app.kubernetes.io/component: auth
  template:
    metadata:
      labels:
        app: auth-service
        app.kubernetes.io/name: expensetracker
        app.kubernetes.io/component: auth
        app.kubernetes.io/version: "1.0"
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "80"
        config.checksum: "abc123"  # This would be computed by CI/CD
    spec:
      serviceAccountName: expensetracker-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - auth-service
              topologyKey: kubernetes.io/hostname
      containers:
        - name: auth-service
          image: auth-service:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
              - ALL
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: ASPNETCORE_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: ASPNETCORE_ENVIRONMENT
            - name: ConnectionStrings__AuthDb
              value: "Host=$(DB_SERVER);Port=$(DB_PORT);Database=$(AUTH_DB_NAME);Username=$(DB_USER);Password=$(DB_PASSWORD)"
            - name: Jwt__Secret
              valueFrom:
                secretKeyRef:
                  name: expensetracker-secrets
                  key: JWT_SECRET
            - name: Jwt__Issuer
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_ISSUER
            - name: Jwt__Audience
              valueFrom:
                configMapKeyRef:
                  name: expensetracker-config
                  key: JWT_AUDIENCE
          envFrom:
            - configMapRef:
                name: expensetracker-config
            - secretRef:
                name: expensetracker-secrets
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
              ephemeral-storage: "1Gi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
              ephemeral-storage: "2Gi"
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
          volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: app-tmp
            mountPath: /app/tmp
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: expensetracker
  labels:
    app: auth-service
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: auth
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: argocd
spec:
  selector:
    app: auth-service
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: auth
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  type: ClusterIP
---
# HPA for auth service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: expensetracker
  labels:
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: auth
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: argocd
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
---
# PDB for auth service
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: auth-service-pdb
  namespace: expensetracker
  labels:
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: auth
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: argocd
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: auth-service
      app.kubernetes.io/name: expensetracker
      app.kubernetes.io/component: auth