apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: expensetracker-applications
  namespace: argocd
  labels:
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: argocd
    app.kubernetes.io/managed-by: argocd
spec:
  generators:
  - list:
      elements:
      - environment: development
        namespace: expensetracker-dev
        project: default
        branch: develop
        syncPolicy: auto
      - environment: staging
        namespace: expensetracker-staging
        project: default
        branch: main
        syncPolicy: auto
      - environment: production
        namespace: expensetracker
        project: production
        branch: main
        syncPolicy: manual
  template:
    metadata:
      name: 'expensetracker-{{environment}}'
      namespace: argocd
      labels:
        app.kubernetes.io/name: expensetracker
        app.kubernetes.io/component: application
        app.kubernetes.io/environment: '{{environment}}'
        app.kubernetes.io/managed-by: argocd
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      project: '{{project}}'
      source:
        repoURL: https://github.com/ravin00/ExpenseTracker
        targetRevision: '{{branch}}'
        path: Infrastructure/Kubernetes/overlays/{{environment}}
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{namespace}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - PrunePropagationPolicy=foreground
          - ApplyOutOfSyncOnly=true
        retry:
          limit: 5
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m
      revisionHistoryLimit: 10
      info:
      - name: 'Environment'
        value: '{{environment}}'
      - name: 'Namespace'
        value: '{{namespace}}'
---
# Production AppProject for enhanced security
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: production
  namespace: argocd
  labels:
    app.kubernetes.io/name: expensetracker
    app.kubernetes.io/component: argocd
    app.kubernetes.io/managed-by: argocd
spec:
  description: Production environment for ExpenseTracker
  sourceRepos:
  - 'https://github.com/ravin00/ExpenseTracker'
  destinations:
  - namespace: expensetracker
    server: https://kubernetes.default.svc
  - namespace: expensetracker-staging
    server: https://kubernetes.default.svc
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  - group: 'rbac.authorization.k8s.io'
    kind: ClusterRole
  - group: 'rbac.authorization.k8s.io'
    kind: ClusterRoleBinding
  namespaceResourceWhitelist:
  - group: ''
    kind: ConfigMap
  - group: ''
    kind: Secret
  - group: ''
    kind: Service
  - group: ''
    kind: ServiceAccount
  - group: ''
    kind: PersistentVolumeClaim
  - group: 'apps'
    kind: Deployment
  - group: 'apps'
    kind: ReplicaSet
  - group: 'autoscaling'
    kind: HorizontalPodAutoscaler
  - group: 'policy'
    kind: PodDisruptionBudget
  - group: 'networking.k8s.io'
    kind: NetworkPolicy
  - group: 'networking.k8s.io'
    kind: Ingress
  - group: 'rbac.authorization.k8s.io'
    kind: Role
  - group: 'rbac.authorization.k8s.io'
    kind: RoleBinding
  roles:
  - name: production-admin
    description: Full access to production namespace
    policies:
    - p, proj:production:production-admin, applications, *, production/*, allow
    - p, proj:production:production-admin, repositories, *, *, allow
    groups:
    - expensetracker:production-admins
  - name: production-readonly
    description: Read-only access to production
    policies:
    - p, proj:production:production-readonly, applications, get, production/*, allow
    - p, proj:production:production-readonly, applications, sync, production/*, deny
    groups:
    - expensetracker:production-viewers