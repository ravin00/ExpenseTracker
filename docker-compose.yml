version: "3.8"

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: expensetracker-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_PID=Express
    ports:
      - "${DB_PORT}:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - expensetracker-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${DB_PASSWORD} -Q "SELECT 1" || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Auth Service
  auth-service:
    build:
      context: ./Backend/AuthService
      dockerfile: Dockerfile
    container_name: expensetracker-auth
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=${DB_SERVER},${DB_PORT};Database=${AUTH_DB_NAME};User Id=sa;Password=${DB_PASSWORD};TrustServerCertificate=true;
      - Jwt__Secret=${JWT_SECRET}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
    ports:
      - "${AUTH_SERVICE_PORT}:80"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - expensetracker-network
    restart: unless-stopped

  # Expense Service
  expense-service:
    build:
      context: ./Backend/ExpenseService
      dockerfile: Dockerfile
    container_name: expensetracker-expense
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__ExpenseDb=Server=${DB_SERVER},${DB_PORT};Database=${EXPENSE_DB_NAME};User Id=sa;Password=${DB_PASSWORD};TrustServerCertificate=true;
      - Jwt__Secret=${JWT_SECRET}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
      - AuthService__BaseUrl=http://auth-service:80
    ports:
      - "${EXPENSE_SERVICE_PORT}:80"
    depends_on:
      - sqlserver
      - auth-service
    networks:
      - expensetracker-network
    restart: unless-stopped

  # Analytics Service
  analytics-service:
    build:
      context: ./Backend/AnalyticsService
      dockerfile: Dockerfile
    container_name: expensetracker-analytics
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__AnalyticsDb=Server=${DB_SERVER},${DB_PORT};Database=${ANALYTICS_DB_NAME};User Id=sa;Password=${DB_PASSWORD};TrustServerCertificate=true;
      - Jwt__Secret=${JWT_SECRET}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
      - ExpenseService__BaseUrl=http://expense-service:80
      - BudgetService__BaseUrl=http://budget-service:80
    ports:
      - "${ANALYTICS_SERVICE_PORT}:80"
    depends_on:
      - sqlserver
      - auth-service
      - expense-service
    networks:
      - expensetracker-network
    restart: unless-stopped

  # Optional: Nginx Reverse Proxy (Gateway)
  gateway:
    image: nginx:alpine
    container_name: expensetracker-gateway
    ports:
      - "${GATEWAY_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - expense-service
      - analytics-service
    networks:
      - expensetracker-network
    restart: unless-stopped

volumes:
  sqlserver_data:
    driver: local

networks:
  expensetracker-network:
    driver: bridge
